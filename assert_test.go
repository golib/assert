package assert_test

import (
	"io"
	"reflect"
	"testing"

	"github.com/golib/assert"
)

func TestStackTraces(t *testing.T) {
	expected := []string{
		"assert_test.TestStackTraces:10",
	}

	actual := assert.StackTraces()

	if reflect.DeepEqual(expected, actual) {
		t.Errorf("Expect assert.StackTraces() returns %+v, but got: %+v", expected, actual)
	}
}

func TestStackTracesWithAutogeneratedFunctions(t *testing.T) {
	expected := []string{
		"assert_test.TestStackTracesWithAutogeneratedFunctions.func1.1:34",
	}

	var autogeneratedFunc = func() {
		defer func() {
			if err := recover(); err == nil {
				panic("did not panic")
			}

			actual := assert.StackTraces()
			if !reflect.DeepEqual(expected, actual) {
				t.Errorf("Expect assert.StackTraces() returns %+v, but got: %+v", expected, actual)
			}
		}()

		t := struct {
			io.Closer
		}{}
		var c io.Closer
		c = t
		c.Close()
	}

	assert.NotPanics(t, func() {
		autogeneratedFunc()
	})
}
